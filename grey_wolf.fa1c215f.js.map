{"mappings":"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","sources":["<anon>","src/js/main.js"],"sourcesContent":["var $54b47fc030b7b21e$exports = {};\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // -----------------------------\n    // To-top button: show/hide + smooth scroll\n    // -----------------------------\n    const toTopBtn = document.querySelector('.to-top');\n    const SHOW_AFTER = 300; // px\n    if (toTopBtn) {\n        const updateVisibility = ()=>{\n            if (window.scrollY > SHOW_AFTER) toTopBtn.classList.add('show');\n            else toTopBtn.classList.remove('show');\n        };\n        // initial state and listeners\n        updateVisibility();\n        window.addEventListener('scroll', updateVisibility, {\n            passive: true\n        });\n        // smooth scroll when clicking the to-top button\n        toTopBtn.addEventListener('click', (ev)=>{\n            ev.preventDefault();\n            const header = document.querySelector('#header') || document.querySelector('header');\n            if (header) header.scrollIntoView({\n                behavior: 'smooth'\n            });\n            else window.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n        });\n    // (menu wiring moved below so it runs on pages without .to-top)\n    // (Removed leftover/duplicate menu code that referenced undefined variables.)\n    }\n    // Mobile menu (simplified): burger shows the nav (display:block), close hides it (display:none)\n    (function() {\n        const burgers = Array.from(document.querySelectorAll('.header__burger'));\n        const closeButtons = Array.from(document.querySelectorAll('.header__panel-close, .mobile-modal__close'));\n        burgers.forEach((b)=>{\n            b.addEventListener('click', (ev)=>{\n                ev.preventDefault();\n                const header = b.closest('header') || document.querySelector('header');\n                const nav = header ? header.querySelector('.header__nav') : document.querySelector('.header__nav');\n                if (!nav) return;\n                // show the nav (simple behavior requested)\n                nav.style.display = 'block';\n                nav.classList.add('open');\n                try {\n                    b.setAttribute('aria-expanded', 'true');\n                } catch (e) {}\n            });\n        });\n        closeButtons.forEach((btn)=>{\n            btn.addEventListener('click', (ev)=>{\n                ev.preventDefault();\n                const header = btn.closest('header') || document.querySelector('header');\n                const nav = header ? header.querySelector('.header__nav') : document.querySelector('.header__nav');\n                if (!nav) return;\n                // hide the nav\n                nav.style.display = 'none';\n                nav.classList.remove('open');\n                const burger = header ? header.querySelector('.header__burger') : document.querySelector('.header__burger');\n                if (burger) {\n                    try {\n                        burger.setAttribute('aria-expanded', 'false');\n                    } catch (e) {}\n                    burger.focus();\n                }\n            });\n        });\n    })();\n});\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // Селектор — переконайся, що імена класів точні\n    const elements = document.querySelectorAll('.history__description, .history__vovk-before, .history__description-vovk, .history__vovk-after');\n    // Функція для зручної діагностики\n    const debugLog = (msg, el)=>{\n    // розкоментуй для консольної діагностики\n    // console.log(msg, el && el.className ? el.className : el);\n    };\n    // Якщо браузер не підтримує IntersectionObserver — fallback\n    if (!('IntersectionObserver' in window)) {\n        elements.forEach((el)=>el.classList.add('visible'));\n        debugLog(\"No IntersectionObserver \\u2014 added visible to all\");\n        return;\n    }\n    const observerOptions = {\n        root: null,\n        rootMargin: '0px 0px -10% 0px',\n        threshold: 0.15 // 15% елемента в кадрі\n    };\n    const observer = new IntersectionObserver((entries, obs)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                entry.target.classList.add('visible');\n                debugLog('Intersecting -> visible added', entry.target);\n                // Якщо хочеш, щоб анімація була лише раз:\n                obs.unobserve(entry.target);\n            } else debugLog('Not intersecting', entry.target);\n        });\n    }, observerOptions);\n    elements.forEach((el)=>observer.observe(el));\n});\nconst $54b47fc030b7b21e$var$today = new Date().getDay(); // неділя = 0\ndocument.querySelectorAll('.schedule-list li').forEach((li)=>{\n    if (Number(li.dataset.day) === $54b47fc030b7b21e$var$today || $54b47fc030b7b21e$var$today >= 1 && $54b47fc030b7b21e$var$today <= 5 && li.dataset.day == 1) li.classList.add('today');\n});\nfunction $54b47fc030b7b21e$var$updateWorkStatus() {\n    const dayNames = [\n        \"\\u041D\\u0435\\u0434\\u0456\\u043B\\u044F\",\n        \"\\u041F\\u043E\\u043D\\u0435\\u0434\\u0456\\u043B\\u043E\\u043A\",\n        \"\\u0412\\u0456\\u0432\\u0442\\u043E\\u0440\\u043E\\u043A\",\n        \"\\u0421\\u0435\\u0440\\u0435\\u0434\\u0430\",\n        \"\\u0427\\u0435\\u0442\\u0432\\u0435\\u0440\",\n        \"\\u041F\\u2019\\u044F\\u0442\\u043D\\u0438\\u0446\\u044F\",\n        \"\\u0421\\u0443\\u0431\\u043E\\u0442\\u0430\"\n    ];\n    const now = new Date();\n    const day = now.getDay(); // 0 = Нд, 6 = Сб\n    const hours = now.getHours();\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\n    const timeString = `${hours}:${minutes}`;\n    let isOpen = false;\n    // Визначаємо робочі години\n    if (day >= 1 && day <= 5) {\n        const openTime = 510; // 08:30\n        const closeTime = 1260; // 21:00\n        const currentTime = hours * 60 + parseInt(minutes);\n        isOpen = currentTime >= openTime && currentTime <= closeTime;\n    } else {\n        const openTime = 600; // 10:00\n        const closeTime = 1200; // 20:00\n        const currentTime = hours * 60 + parseInt(minutes);\n        isOpen = currentTime >= openTime && currentTime <= closeTime;\n    }\n    document.getElementById(\"today-day\").textContent = `\\u{421}\\u{44C}\\u{43E}\\u{433}\\u{43E}\\u{434}\\u{43D}\\u{456}: ${dayNames[day]}`;\n    document.getElementById(\"today-time\").textContent = timeString;\n    const statusEl = document.getElementById(\"today-status\");\n    if (isOpen) {\n        statusEl.textContent = \"\\u0412\\u0456\\u0434\\u0447\\u0438\\u043D\\u0435\\u043D\\u043E\";\n        statusEl.className = \"open\";\n    } else {\n        statusEl.textContent = \"\\u0417\\u0430\\u0447\\u0438\\u043D\\u0435\\u043D\\u043E\";\n        statusEl.className = \"closed\";\n    }\n}\n$54b47fc030b7b21e$var$updateWorkStatus();\nsetInterval($54b47fc030b7b21e$var$updateWorkStatus, 60000); // оновлення кожну хвилину\n\n\n//# sourceMappingURL=grey_wolf.fa1c215f.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  // -----------------------------\n  // To-top button: show/hide + smooth scroll\n  // -----------------------------\n  const toTopBtn = document.querySelector('.to-top');\n  const SHOW_AFTER = 300; // px\n\n  if (toTopBtn) {\n    const updateVisibility = () => {\n      if (window.scrollY > SHOW_AFTER) toTopBtn.classList.add('show');\n      else toTopBtn.classList.remove('show');\n    };\n\n    // initial state and listeners\n    updateVisibility();\n    window.addEventListener('scroll', updateVisibility, { passive: true });\n\n    // smooth scroll when clicking the to-top button\n    toTopBtn.addEventListener('click', (ev) => {\n      ev.preventDefault();\n      const header = document.querySelector('#header') || document.querySelector('header');\n      if (header) header.scrollIntoView({ behavior: 'smooth' });\n      else window.scrollTo({ top: 0, behavior: 'smooth' });\n    });\n\n    // (menu wiring moved below so it runs on pages without .to-top)\n\n    // (Removed leftover/duplicate menu code that referenced undefined variables.)\n  }\n\n  // Mobile menu (simplified): burger shows the nav (display:block), close hides it (display:none)\n  (function() {\n    const burgers = Array.from(document.querySelectorAll('.header__burger'));\n    const closeButtons = Array.from(document.querySelectorAll('.header__panel-close, .mobile-modal__close'));\n\n    burgers.forEach(b => {\n      b.addEventListener('click', (ev) => {\n        ev.preventDefault();\n        const header = b.closest('header') || document.querySelector('header');\n        const nav = header ? header.querySelector('.header__nav') : document.querySelector('.header__nav');\n        if (!nav) return;\n        // show the nav (simple behavior requested)\n        nav.style.display = 'block';\n        nav.classList.add('open');\n        try { b.setAttribute('aria-expanded', 'true'); } catch (e) {}\n      });\n    });\n\n    closeButtons.forEach(btn => {\n      btn.addEventListener('click', (ev) => {\n        ev.preventDefault();\n        const header = btn.closest('header') || document.querySelector('header');\n        const nav = header ? header.querySelector('.header__nav') : document.querySelector('.header__nav');\n        if (!nav) return;\n        // hide the nav\n        nav.style.display = 'none';\n        nav.classList.remove('open');\n        const burger = header ? header.querySelector('.header__burger') : document.querySelector('.header__burger');\n        if (burger) { try { burger.setAttribute('aria-expanded', 'false'); } catch (e) {} ; burger.focus(); }\n      });\n    });\n  })();\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Селектор — переконайся, що імена класів точні\n  const elements = document.querySelectorAll(\n    '.history__description, .history__vovk-before, .history__description-vovk, .history__vovk-after'\n  );\n\n  // Функція для зручної діагностики\n  const debugLog = (msg, el) => {\n    // розкоментуй для консольної діагностики\n    // console.log(msg, el && el.className ? el.className : el);\n  };\n\n  // Якщо браузер не підтримує IntersectionObserver — fallback\n  if (!('IntersectionObserver' in window)) {\n    elements.forEach(el => el.classList.add('visible'));\n    debugLog('No IntersectionObserver — added visible to all');\n    return;\n  }\n\n  const observerOptions = {\n    root: null,\n    rootMargin: '0px 0px -10% 0px', // можна коригувати коли спрацьовує\n    threshold: 0.15 // 15% елемента в кадрі\n  };\n\n  const observer = new IntersectionObserver((entries, obs) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n        debugLog('Intersecting -> visible added', entry.target);\n        // Якщо хочеш, щоб анімація була лише раз:\n        obs.unobserve(entry.target);\n      } else {\n        debugLog('Not intersecting', entry.target);\n        // Якщо хочеш, щоб анімація повторювалась при виході/повторному вході,\n        // прибери unobserve вище і НЕ додавай unobserve тут.\n      }\n    });\n  }, observerOptions);\n\n  elements.forEach(el => observer.observe(el));\n});\n\nconst today = new Date().getDay(); // неділя = 0\ndocument.querySelectorAll('.schedule-list li').forEach(li => {\n  if (Number(li.dataset.day) === today || (today >= 1 && today <= 5 && li.dataset.day == 1)) {\n    li.classList.add('today');\n  }\n});\n\n\n\nfunction updateWorkStatus() {\n  const dayNames = [\"Неділя\",\"Понеділок\",\"Вівторок\",\"Середа\",\"Четвер\",\"П’ятниця\",\"Субота\"];\n  const now = new Date();\n  const day = now.getDay(); // 0 = Нд, 6 = Сб\n  const hours = now.getHours();\n  const minutes = now.getMinutes().toString().padStart(2,\"0\");\n  const timeString = `${hours}:${minutes}`;\n\n  let isOpen = false;\n\n  // Визначаємо робочі години\n  if(day >= 1 && day <= 5){ // Пн-Пт\n    const openTime = 8*60 + 30;  // 08:30\n    const closeTime = 21*60;     // 21:00\n    const currentTime = hours*60 + parseInt(minutes);\n    isOpen = currentTime >= openTime && currentTime <= closeTime;\n  } else { // Сб-Нд\n    const openTime = 10*60; // 10:00\n    const closeTime = 20*60; // 20:00\n    const currentTime = hours*60 + parseInt(minutes);\n    isOpen = currentTime >= openTime && currentTime <= closeTime;\n  }\n\n  document.getElementById(\"today-day\").textContent = `Сьогодні: ${dayNames[day]}`;\n  document.getElementById(\"today-time\").textContent = timeString;\n\n  const statusEl = document.getElementById(\"today-status\");\n  if(isOpen){\n    statusEl.textContent = \"Відчинено\";\n    statusEl.className = \"open\";\n  } else {\n    statusEl.textContent = \"Зачинено\";\n    statusEl.className = \"closed\";\n  }\n}\n\nupdateWorkStatus();\nsetInterval(updateWorkStatus, 60000); // оновлення кожну хвилину\n"],"names":["document","addEventListener","toTopBtn","querySelector","updateVisibility","window","scrollY","classList","add","remove","passive","ev","preventDefault","header","scrollIntoView","behavior","scrollTo","top","burgers","Array","from","querySelectorAll","closeButtons","forEach","b","closest","nav","style","display","setAttribute","e","btn","burger","focus","elements","debugLog","msg","el","observer","IntersectionObserver","entries","obs","entry","isIntersecting","target","unobserve","root","rootMargin","threshold","observe","$54b47fc030b7b21e$var$today","Date","getDay","$54b47fc030b7b21e$var$updateWorkStatus","now","day","hours","getHours","minutes","getMinutes","toString","padStart","timeString","isOpen","currentTime","parseInt","getElementById","textContent","dayNames","statusEl","className","li","Number","dataset","setInterval"],"version":3,"file":"grey_wolf.fa1c215f.js.map"}